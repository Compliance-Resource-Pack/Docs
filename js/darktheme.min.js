const css = document.getElementById("darkcss"), btn = document.getElementById("DarkMode"), THEME_VALUES = [{ value: "auto", html: '<i style="margin-right: 5px" class="fas fa-adjust"></i> Auto Theme' }, { value: "dark", html: '<i style="margin-right: 5px" class="fas fa-moon"></i> Dark Theme' }, { value: "light", html: '<i style="margin-right: 5px" class="fas fa-sun"></i> Light Theme' }], THEME_DEFAULT_VALUE = THEME_VALUES[0].value, THEME_LOCALSTORAGE_KEY = "theme"; window.theme = { get currentTheme() { return localStorage.getItem("theme") || THEME_DEFAULT_VALUE }, set currentTheme(e) { localStorage.setItem("theme", e) }, get currentThemeIndex() { return THEME_VALUES.findIndex(e => e.value === this.currentTheme) }, set currentThemeIndex(e) { }, get currentThemeHTML() { return THEME_VALUES[this.currentThemeIndex].html }, set currentThemeHTML(e) { }, get nextTheme() { return THEME_VALUES[(this.currentThemeIndex + 1) % THEME_VALUES.length].value }, set nextTheme(e) { } }, btn.innerHTML = theme.currentThemeHTML, window.changeMod = (e => { e && (window.theme.currentTheme = theme.nextTheme, btn.innerHTML = theme.currentThemeHTML), "dark" === theme.currentTheme || "auto" === theme.currentTheme && matchMedia("(prefers-color-scheme: dark)").matches ? css.href = "/css/dark.css" : css.href = "" }), changeMod(!1);